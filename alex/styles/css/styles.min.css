.feedback button,.form button{box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);-webkit-transition:all .3s cubic-bezier(.25,.8,.25,1)}@font-face{font-family:FuturaPT;src:url(../fonts/Futura/FuturaPTMedium.otf);font-weight:400;font-style:normal}@font-face{font-family:FuturaPT;src:url(../fonts/Futura/FuturaPTMediumOblique.otf);font-weight:400;font-style:italic}@font-face{font-family:FuturaPT;src:url(../fonts/Futura/FuturaPTBold.otf);font-weight:700;font-style:normal}@font-face{font-family:FuturaPT;src:url(../fonts/Futura/FuturaPTBoldOblique.otf);font-weight:700;font-style:italic}@font-face{font-family:Russia;src:url(../fonts/Russia/Russia-Medium.otf);font-weight:400;font-style:normal}@font-face{font-family:Russia;src:url(../fonts/Russia/Russia-MediumItalic.otf);font-weight:400;font-style:italic}@font-face{font-family:Russia;src:url(../fonts/Russia/Russia-Bold.otf);font-weight:700;font-style:normal}@font-face{font-family:Russia;src:url(../fonts/Russia/Russia-BoldItalic.otf);font-weight:700;font-style:italic}@font-face{font-family:Intro;src:url(../fonts/1oI20TYr.otf);font-weight:400;font-style:normal}body{font-size:15px;margin:0;padding:0;font-family:Russia}.form__title,.sectionTitle{font-family:Intro;text-align:center;line-height:36px}a,figure,h1,h2,h3,li,p,ul{margin:0;padding:0;text-decoration:none;list-style-type:none}h1,h2,h3{text-align:center}.sectionTitle{color:#050101;font-size:48px;padding:70px 0;letter-spacing:5px}.form__title{color:#fff;font-size:36px;font-weight:400;letter-spacing:2px;padding:96px 0 62px}.container{max-width:960px;width:100%;margin:0 auto}.formBg{background:-webkit-linear-gradient(left,#a72c21 0,#df552f 25%,#df552f 75%,#df552f 75%,#a72c21 100%);background:linear-gradient(to right,#a72c21 0,#df552f 25%,#df552f 75%,#df552f 75%,#a72c21 100%);width:100%;height:320px;z-index:-1}header{display:block;margin:25px auto 70px;max-width:960px}.navigation,.navigation .navigation__item{display:inline-block}.navigation{max-width:775px;vertical-align:top}.navigation .navigation__item a{color:#fff;text-decoration:none;padding:10px 9px;font-weight:400;font-size:19px;font-family:Russia;display:block}.feedback{display:inline-block;margin-left:60px;text-align:right}.feedback strong{display:block;font-family:FuturaPT;color:#fff;font-size:26px;font-weight:700;line-height:36px;text-align:left;margin-bottom:22px}.aboutMe,.aboutMe h1,.socialGroups{display:inline-block}.feedback button{border-radius:2px;border:0;background-color:#de1f00;width:140px;height:39px;text-transform:uppercase;font-size:16px;font-family:Russia;transition:all .3s cubic-bezier(.25,.8,.25,1);color:#fff}.firstBg,main{width:100%}.firstBg{background:url(../../img/bg_1.jpg) no-repeat;background-size:100% 942px;height:100%;min-height:942px;position:absolute;top:0;left:0;z-index:-1}.form button,.form input{height:46px;box-sizing:border-box}@media screen and (max-width:1440px){.firstBg{background:url(../../img/min_bg_1.jpg) no-repeat;background-size:100% 942px}}.aboutMe{max-width:500px;min-height:750px;color:#fff}.aboutMe h1{font-family:Intro;text-align:left;line-height:70px;font-size:72px;max-width:368px;margin-bottom:32px}.aboutMe p,.bestLogo figcaption{font-size:30px;line-height:36px;font-family:Russia}.aboutMe p{max-width:340px;margin-bottom:50px}.bestLogo img{margin-bottom:30px}.bestLogo figcaption{font-weight:700;max-width:240px}.socialGroups{vertical-align:top;margin-left:70px}.socialGroups a{display:block;max-width:40px;margin-top:10px}.socialGroups a:first-child{margin-top:0}.radio{margin:0 auto;display:block;text-align:center;padding:70px 0 56px}.radio .radio__item{display:inline-block}.radio .radio__item figcaption{max-width:124px;font-family:Russia;font-size:20px;line-height:24px;margin:0 auto}.radio .radio__item:nth-of-type(1){margin-right:160px}.radio .radio__item:nth-of-type(2){margin-right:180px}.form{display:block;vertical-align:middle;min-height:320px}.form i{position:relative}.form i::before{position:absolute;left:10px;top:0;font-size:20px}.form input{border-radius:4px;border:0;background-color:#fff;width:245px;padding:0 0 0 40px}.form input::-webkit-input-placeholder{color:#000;font-family:Russia;line-height:24px;font-size:16px}.form button,.info p{font-size:18px;font-family:Russia}.form button{border-radius:4px;border:0;background-color:#030303;width:198px;color:#fff;line-height:36px;transition:all .3s cubic-bezier(.25,.8,.25,1)}.infoBg{width:100%;height:872px;background:url(../../img/info_bg.jpg);z-index:-1}.info{min-height:872px}.info p{color:#050101;font-weight:400;line-height:24px;text-align:left;margin-bottom:30px}.info p:nth-of-type(1){max-width:610px}.info p:nth-of-type(2){max-width:510px}.info p:nth-of-type(3){max-width:465px}.info p:nth-of-type(4){max-width:455px}.privilege{min-height:510px}.privilege figure{display:inline-block;margin-right:35px;position:relative;font-family:Russia;text-align:center}.privilege figure:last-child{margin-right:0}.privilege figure img{margin:0 auto;display:block;position:absolute;left:0;right:0}.privilege figure figcaption{text-align:center;margin-top:120px;max-width:240px}.privilege__item:nth-of-type(1) p{max-width:176px}.privilege__item:nth-of-type(2) p{max-width:208px}.privilege__item:nth-of-type(3) p{max-width:201px}.privilege__item figcaption h2{font-size:24px;font-family:Intro;margin-bottom:28px}.price p,.reviews .reviews__item p{font-family:Russia;font-weight:400;text-align:center}.privilege__item figcaption p{font-size:16px}.video{min-height:720px}.video article iframe{width:100%;height:540px}.slider{width:100%;margin:0 auto}.slider .slick-track{padding-bottom:25px}.slider .slick-slide{margin:0}.slider .slick-slide img{height:100%}.slider .slick-next:before,.slider .slick-prev:before{color:transparent;height:60px;width:60px;content:'';display:block}.slider .slick-prev:before{background:url(../../img/left.png)}.slider .slick-next:before{background:url(../../img/right.png)}.slider .slick-next,.slider .slick-prev{height:100%;width:60px;z-index:1}.slider .slick-prev{left:0}.slider .slick-next{right:42px}.price{min-height:500px}.price .sectionTitle{color:#000}.price p{color:#050101;font-size:24px;line-height:30px;margin-bottom:70px}.price input{border:1px solid #000}.price button{background:#de1f00}.reviews{background:url(../../img/reviews_bg.jpg) 100% no-repeat;width:100%;height:1098px}.reviews .slick-list{padding-top:20px}.reviews .slick-dots{bottom:-75px}.reviews .slick-dots li button:before{content:'';border-radius:10px;background:#000;height:18px;width:18px}.reviews .sectionTitle{line-height:60px}.reviews .reviews__item{width:456px;height:565px;margin-right:30px;padding:95px 23px 0;box-sizing:border-box;background:#fff;position:relative}.reviews .reviews__item::before{content:'';display:block;height:78px;width:78px;position:absolute;top:-20px;right:calc(50% - 39px);background:url(../../img/review_i.png) 100% no-repeat}.reviews .reviews__item p{color:#000;font-size:22px;line-height:30px;max-height:270px;display:block;height:100%}.reviews .reviews__item strong{font-size:15px;max-width:174px;text-align:center;display:block;margin:0 auto 15px;max-height:67px;height:100%}.reviews .reviews__item .reviews__logo{max-width:211px;max-height:89px;margin:0 auto;line-height:89px;text-align:center}.reviews .reviews__item .reviews__logo img{margin:0 auto;vertical-align:middle;display:inline-block}.reviews .slick-next:before,.reviews .slick-prev:before{display:none}.clients{min-height:320px}.clients .slider{width:90%}.clients .slider .slick-prev{left:-100px}.clients .slider .slick-next{right:-100px}.clients .slick-slide{line-height:65px;text-align:center}.clients .slick-slide img{display:inline-block;vertical-align:middle}.private{background:url(../../img/private_reviews_bg.jpg) no-repeat;background-size:100% 1098px}.private .reviews__item p{max-height:360px}footer{background:url(../../img/footer_bg.jpg) 100% no-repeat;width:100%;height:804px;padding-top:50px}footer .sectionTitle{color:#fff}footer .form{min-height:180px;text-align:center}footer .form input{width:315px;box-shadow:0 1px 3px rgba(255,255,255,.12),0 1px 2px rgba(255,255,255,.24);-webkit-transition:all .3s cubic-bezier(.25,.8,.25,1);transition:all .3s cubic-bezier(.25,.8,.25,1)}footer .form input:focus{box-shadow:0 4px 6px rgba(255,255,255,.29),0 -4px 6px rgba(255,255,255,.33)}footer .form button{width:275px;background:#de1f00;margin-top:30px}footer .socialGroups{text-align:center;display:block;margin:0 0 70px}footer .socialGroups a{display:inline-block;margin-right:10px}footer .socialGroups a:last-child{margin:0}footer .download{display:block;max-width:230px;max-height:40px;color:#fff;font-family:FuturaPT;font-size:18px;font-weight:700;text-align:center;margin:50px auto 0;position:relative}footer .download::before{content:'';display:block;width:45px;height:41px;background:url(../../img/download.png) no-repeat;background-size:100%;position:absolute;left:calc(50% - 22px);top:-60px}
/*# sourceMappingURL=data:application/json;base64, */
